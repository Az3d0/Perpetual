using System;
using UnityEditor;
using UnityEngine;


public class TerrainDetectorRay : MonoBehaviour
{

    private Ray m_ray;

    public Vector3 RayForwardVector;
    public Action<RaycastHit> TerrainDetected;
    public Ray Ray => m_ray;


    [SerializeField] private bool m_debugMode;

    protected void OnEnable()
    {
        //won't be needing unsubscribe since the action is generated by the same script
        TerrainDetected += OnHitDetected;
    }
    protected virtual void Update()
    {
        m_ray = new Ray(transform.position, RayForwardVector);

        if (Physics.Raycast(m_ray, out RaycastHit hitInfo, 0.5f))
        {
            TerrainDetected.Invoke(hitInfo);
        }

        if (m_debugMode)
        {
            EnableDebugMode();
        }

    }
    protected virtual void EnableDebugMode()
    {
        Debug.DrawRay(m_ray.origin, m_ray.direction, Color.red);
    }


    protected virtual void OnHitDetected(RaycastHit hitinfo)
    {

    }

    private void OnDrawGizmosSelected()
    {
        var ray = new Ray(transform.position, RayForwardVector);
        if (m_debugMode)
        {
            Debug.DrawRay(ray.origin, ray.direction, Color.red);
        }
    }
}
